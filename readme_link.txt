git clone https://github.com/LpilinAlexandr/basic_db.git


https://www.youtube.com/watch?v=IalFqykJmi0

Минимальный уровень по базам данных для первой работы
Backend artist
4,85 тыс. подписчиков
  
4 379 просмотров  16 янв. 2024 г.

В этом видео мы просто пройдемся по важным темам, которые нужны в работе с базами данных и я постараюсь объяснить их простыми словами.
Сначала немного теории: поговорим об ACID, транзакциях и нормализации.
Эти вопросы часто попадаются на собеседованиях.
Вторая часть практическая. В ней мы скачаем клиент к базе данных, запустим в докере майскл и постгрес. Создадим базу в обеих субд и сделаем дамп. Посмотрим разницу. Поработаем с индексами и сделаем анализ запроса.

Ссылки:
1) Репозиторий из видео: git clone https://github.com/LpilinAlexandr/basic_db.git
2) Замечательная статья с Хабра об ACID, откуда я взял картинки: https://habr.com/ru/articles/555920/
3) Скачать Dbeaver. Мало ли кто сам не найдёт: https://dbeaver.io/download/

Таймкоды:
00:00:00 - Вступление
00:00:50 - Представление таблиц
00:05:25 - ACID
00:11:00 - Транзакции
00:18:17 - Нормализация
00:24:34 - Скачиваем Dbeaver
00:25:49 - Запускаем Mysql и PostgreSQL и коннектимся через Dbeaver
00:30:00 - Инициализируем базу
00:35:00 - DDL (Определение и изменение структуры базы данных)
00:36:22 - DML (Получение и изменение записей в таблице)
00:39:50 - Делаем дамп Mysql
00:48:34 - Делаем дамп PostgreSQL
00:50:27 - Сравниваем дампы Mysql и PostgreSQL
00:54:30 - Вкатываем дамп PostgreSQL
00:57:35 - Индексы
01:01:13 - Добавляем 5 000 000 записей
01:04:05 - Создаём индексы
01:05:59 - Тестируем скорость записи
01:08:29 - Тестируем скорость чтения
01:11:59 - Анализируем запрос
01:17:31 - Анализируем запрос через ChatGPT

=======================================================================
# docker compose -f ./docker-compose_postgres.yml  up -d

# docker compose ls
#NAME                STATUS              CONFIG FILES
#basic_db_postgres   running(1)          /mnt/data500/AVI_IT_SQL_2022/basic_db___BackendArtist__Минимальный_уровень_по_базам_данных/docker-compose_postgres.yml

# docker compose --project-name postgres down -v   # delete

# docker compose --project-name postgres stop       # stop
# docker compose --project-name postgres start		#start	
